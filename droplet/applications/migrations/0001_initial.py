# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2017-04-13 03:08
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Database',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Database')),
            ],
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Platform')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Education', 'Education'), ('Artificial Intelligence', 'Artificial Intelligence'), ('ECOM', 'ECOM'), ('DBMS', 'DBMS'), ('HealthCare', 'HealthCare'), ('CMS', 'CMS'), ('IoT', 'IoT'), ('NoSQL', 'NoSQL')], default='DBMS', max_length=32, verbose_name='Type')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('summary', models.TextField(blank=True, null=True, verbose_name='Summary')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('detail', models.URLField(blank=True, null=True, verbose_name='Detail')),
                ('product_url', models.URLField(blank=True, max_length=256, null=True, verbose_name='ProductURL')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logos/', verbose_name='ProductLogo')),
                ('vendor_name', models.CharField(blank=True, max_length=256, null=True, verbose_name='VendorName')),
                ('vendor_url', models.URLField(blank=True, max_length=256, null=True, verbose_name='VendorURL')),
                ('latest_version', models.CharField(blank=True, max_length=256, null=True, verbose_name='LatestVersion')),
                ('first_release_date', models.DateField(blank=True, null=True, verbose_name='FirstReleaseDate')),
                ('latest_release_date', models.DateField(blank=True, null=True, verbose_name='LatestReleaseDate')),
                ('opensource', models.BooleanField(default=True, verbose_name='OpenSource')),
                ('license_type', models.CharField(blank=True, max_length=256, null=True, verbose_name='LicenseType')),
                ('free_plan', models.BooleanField(default=False, verbose_name='FreePlan')),
                ('free_plan_spec', models.CharField(blank=True, max_length=256, null=True, verbose_name='FreePlanSpec')),
                ('paid_plan', models.BooleanField(default=True, verbose_name='PaidPlan')),
                ('paid_plan_price', models.DecimalField(blank=True, decimal_places=4, max_digits=19, null=True, verbose_name='PaidPlanPrice')),
                ('demo_url', models.URLField(blank=True, max_length=256, null=True, verbose_name='DemoURL')),
                ('demo_version', models.CharField(blank=True, max_length=256, null=True, verbose_name='DemoVersion')),
                ('facebook_url', models.URLField(blank=True, max_length=256, null=True, verbose_name='FacebookURL')),
                ('facebook_follower', models.CharField(blank=True, max_length=32, null=True, verbose_name='FacebookFollower')),
                ('google_plus_url', models.URLField(blank=True, max_length=256, null=True, verbose_name='GoogkePlusURL')),
                ('google_plus_follower', models.CharField(blank=True, max_length=32, null=True, verbose_name='GoogkePlusFollower')),
                ('linkedin_url', models.URLField(blank=True, max_length=256, null=True, verbose_name='LinkedInURL')),
                ('linkedin_follower', models.CharField(blank=True, max_length=32, null=True, verbose_name='LinkedInFollower')),
                ('twitter_url', models.URLField(blank=True, max_length=256, null=True, verbose_name='TwitterURL')),
                ('twitter_follower', models.CharField(blank=True, max_length=32, null=True, verbose_name='TwitterFollower')),
                ('document_url', models.URLField(blank=True, max_length=256, null=True, verbose_name='DocumentURL')),
                ('rank', models.IntegerField(choices=[(1, 1), (4, 4), (5, 5), (3, 3), (2, 2)], default=5, verbose_name='Rank')),
                ('clients', models.CharField(blank=True, max_length=32, null=True, verbose_name='Client')),
                ('is_popular', models.BooleanField(default=False, verbose_name='Popular')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Featured')),
                ('special', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Special')),
                ('status', models.CharField(choices=[('Inactive', 'Inactive'), ('Active', 'Active'), ('Pending', 'Pending')], default='Pending', max_length=32, verbose_name='Status')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='CreatedDate')),
                ('created_by', models.CharField(blank=True, max_length=32, null=True, verbose_name='CreatedBy')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='UpdatedDate')),
                ('updated_by', models.CharField(blank=True, max_length=32, null=True, verbose_name='UpdatedBy')),
                ('database', models.ManyToManyField(blank=True, to='applications.Database')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Product',
            },
        ),
        migrations.CreateModel(
            name='ProductCategories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('feature01', models.CharField(blank=True, max_length=256, null=True, verbose_name='Feature01')),
                ('feature02', models.CharField(blank=True, max_length=256, null=True, verbose_name='Feature02')),
                ('feature03', models.CharField(blank=True, max_length=256, null=True, verbose_name='Feature03')),
                ('feature04', models.CharField(blank=True, max_length=256, null=True, verbose_name='Feature04')),
                ('feature05', models.CharField(blank=True, max_length=256, null=True, verbose_name='Feature05')),
                ('feature06', models.CharField(blank=True, max_length=256, null=True, verbose_name='Feature06')),
                ('feature07', models.CharField(blank=True, max_length=256, null=True, verbose_name='Feature07')),
                ('feature08', models.CharField(blank=True, max_length=256, null=True, verbose_name='Feature08')),
                ('feature09', models.CharField(blank=True, max_length=256, null=True, verbose_name='Feature09')),
                ('feature10', models.CharField(blank=True, max_length=256, null=True, verbose_name='Feature10')),
                ('status', models.CharField(choices=[('Inactive', 'Inactive'), ('Active', 'Active'), ('Pending', 'Pending')], default='Pending', max_length=32, verbose_name='Status')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='CreatedDate')),
                ('created_by', models.CharField(blank=True, max_length=32, null=True, verbose_name='CreatedBy')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='UpdatedDate')),
                ('updated_by', models.CharField(blank=True, max_length=32, null=True, verbose_name='UpdatedBy')),
            ],
            options={
                'verbose_name': 'ProductCategories',
                'verbose_name_plural': 'ProductCategories',
            },
        ),
        migrations.CreateModel(
            name='ProductToCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_feature01', models.BooleanField(default=True, verbose_name='HasFeature01')),
                ('has_feature02', models.BooleanField(default=True, verbose_name='HasFeature02')),
                ('has_feature03', models.BooleanField(default=True, verbose_name='HasFeature03')),
                ('has_feature04', models.BooleanField(default=True, verbose_name='HasFeature04')),
                ('has_feature05', models.BooleanField(default=True, verbose_name='HasFeature05')),
                ('has_feature06', models.BooleanField(default=True, verbose_name='HasFeature06')),
                ('has_feature07', models.BooleanField(default=True, verbose_name='HasFeature07')),
                ('has_feature08', models.BooleanField(default=True, verbose_name='HasFeature08')),
                ('has_feature09', models.BooleanField(default=True, verbose_name='HasFeature09')),
                ('has_feature10', models.BooleanField(default=True, verbose_name='HasFeature10')),
                ('category_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pc', to='applications.ProductCategories')),
                ('product_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ptc', to='applications.Product')),
            ],
            options={
                'verbose_name': 'ProductToCategory',
                'verbose_name_plural': 'ProductToCategory',
            },
        ),
        migrations.CreateModel(
            name='ProductVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256, verbose_name='Title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('url', models.URLField(blank=True, max_length=256, null=True, verbose_name='URL')),
                ('status', models.CharField(choices=[('Inactive', 'Inactive'), ('Active', 'Active'), ('Pending', 'Pending')], default='Pending', max_length=32, verbose_name='Status')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='CreatedDate')),
                ('created_by', models.CharField(blank=True, max_length=256, null=True, verbose_name='CreatedBy')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='CreatedDate')),
                ('updated_by', models.CharField(blank=True, max_length=256, null=True, verbose_name='UpdatedBy')),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='video', to='applications.Product')),
            ],
            options={
                'verbose_name': 'Video',
                'verbose_name_plural': 'Video',
            },
        ),
        migrations.CreateModel(
            name='ProgramLanguage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Language')),
            ],
        ),
        migrations.CreateModel(
            name='ReleaseHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('release_date', models.DateTimeField(blank=True, null=True, verbose_name='ReleaseDate')),
                ('version', models.CharField(blank=True, max_length=32, null=True, verbose_name='Version')),
                ('status', models.CharField(choices=[('Inactive', 'Inactive'), ('Active', 'Active'), ('Pending', 'Pending')], default='Pending', max_length=32, verbose_name='Status')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='CreatedDate')),
                ('created_by', models.CharField(blank=True, max_length=256, null=True, verbose_name='CreatedBy')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='CreatedDate')),
                ('updated_by', models.CharField(blank=True, max_length=256, null=True, verbose_name='UpdatedBy')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='release', to='applications.Product')),
            ],
            options={
                'verbose_name': 'Version',
                'verbose_name_plural': 'Version',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(blank=True, choices=[(1, 1), (4, 4), (5, 5), (3, 3), (2, 2)], default=5, null=True, verbose_name='Rating')),
                ('reviews', models.TextField(blank=True, null=True, verbose_name='Review')),
                ('status', models.CharField(choices=[('Inactive', 'Inactive'), ('Active', 'Active'), ('Pending', 'Pending')], default='Pending', max_length=32, verbose_name='Status')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='CreatedDate')),
                ('created_by', models.CharField(blank=True, max_length=256, null=True, verbose_name='CreatedBy')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='CreatedDate')),
                ('updated_by', models.CharField(blank=True, max_length=256, null=True, verbose_name='UpdatedBy')),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review', to='applications.Product')),
            ],
            options={
                'verbose_name': 'review',
                'verbose_name_plural': 'review',
            },
        ),
        migrations.CreateModel(
            name='ScreenShot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('software_version', models.CharField(blank=True, max_length=256, null=True, verbose_name='SoftwareVersion')),
                ('title', models.CharField(max_length=256, verbose_name='Title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('url', models.URLField(blank=True, max_length=256, null=True, verbose_name='URL')),
                ('status', models.CharField(choices=[('Inactive', 'Inactive'), ('Active', 'Active'), ('Pending', 'Pending')], default='Pending', max_length=32, verbose_name='Status')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='CreatedDate')),
                ('created_by', models.CharField(blank=True, max_length=32, null=True, verbose_name='CreatedBy')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='UpdatedDate')),
                ('updated_by', models.CharField(blank=True, max_length=32, null=True, verbose_name='UpdatedBy')),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='screen_shot', to='applications.Product')),
            ],
            options={
                'verbose_name': 'ScreenShot',
                'verbose_name_plural': 'ScreenShot',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='language',
            field=models.ManyToManyField(blank=True, to='applications.ProgramLanguage'),
        ),
        migrations.AddField(
            model_name='product',
            name='platform',
            field=models.ManyToManyField(blank=True, to='applications.Platform'),
        ),
    ]
